(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{694:function(e,t,n){"use strict";n.r(t);var a=n(13),s=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"m18-hcm-web-services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#m18-hcm-web-services"}},[e._v("#")]),e._v(" M18 HCM Web Services")]),e._v(" "),t("p",[e._v("?"),t("code",[e._v("Version: 1.01 | Release Date: 12/2/2019")])]),e._v(" "),t("h2",{attrs:{id:"organization-and-personnel-management"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#organization-and-personnel-management"}},[e._v("#")]),e._v(" Organization And Personnel Management")]),e._v(" "),t("h3",{attrs:{id:"get-employee-s-length-of-notice-required-period-as-at-termination-effective-date"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-employee-s-length-of-notice-required-period-as-at-termination-effective-date"}},[e._v("#")]),e._v(" Get Employee's Length of Notice Required Period as at Termination Effective Date")]),e._v(" "),t("p",[t("strong",[e._v("HTTP Request")])]),e._v(" "),t("p",[t("code",[e._v("GET http://[server]/jsf/rfws/emp/termination/getEmpNoticeRequired")])]),e._v(" "),t("p",[t("strong",[e._v("Parameters")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("empId")]),e._v(" "),t("td",[t("code",[e._v("String")]),e._v("("),t("em",[e._v("Query")]),e._v(")")]),e._v(" "),t("td",[t("strong",[e._v("Required.")]),e._v(" ID of terminated Employee")])]),e._v(" "),t("tr",[t("td",[e._v("applyDate")]),e._v(" "),t("td",[t("code",[e._v("String")]),e._v("("),t("em",[e._v("Query")]),e._v(")")]),e._v(" "),t("td",[t("strong",[e._v("Required.")]),e._v(" Date String of Employee Termination Effective Date")])])])]),e._v(" "),t("p",[t("strong",[e._v("Result (in JSON Array)")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("size")]),e._v(" "),t("td",[t("code",[e._v("int")])]),e._v(" "),t("td",[e._v("Size of JsonArray in values")])]),e._v(" "),t("tr",[t("td",[e._v("values")]),e._v(" "),t("td",[t("code",[e._v("string")])]),e._v(" "),t("td",[e._v("Data, depends on Table")])]),e._v(" "),t("tr",[t("td",[e._v("name")]),e._v(" "),t("td",[t("code",[e._v("string")])]),e._v(" "),t("td",[e._v("Name. Empty")])]),e._v(" "),t("tr",[t("td",[e._v("fields")]),e._v(" "),t("td",[t("code",[e._v("string")])]),e._v(" "),t("td",[e._v("Field Details")])])])]),e._v(" "),t("blockquote",[t("p",[e._v("Sample request:")])]),e._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("OkHttpClient")]),e._v(" client "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("OkHttpClient")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("String")]),e._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" server "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/jsf/rfws/emp/termination/getEmpNoticeRequired?empId="')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" empId "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" applyDate"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v('" '),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" applyDate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Request")]),e._v(" request "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Builder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("addHeader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"client_id"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" clientID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("addHeader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"authorization"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Bearer "')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" token"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("addHeader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"cache-control"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"no-cache"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Response")]),e._v(" response "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("newCall")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n\n\n")])])]),t("blockquote",[t("p",[e._v('Sample response:\n{\n"size": 1,\n"values": [\n{\n"id": 809,\n"code": "CR-L101",\n"joinDate": "2012-10-01 00:00:00",\n"noticeReqLenght": 99,\n"noticeReqUnit": "mth"\n}\n],\n"name": "",\n"fields": [\n{\n"name": "id",\n"classType": 10,\n"fieldClassName": "Long",\n"fieldClass": "java.lang.Long"\n},\n{\n"name": "code",\n"classType": 0,\n"fieldClassName": "String",\n"fieldClass": "java.lang.String"\n},\n{\n"name": "joinDate",\n"classType": 21,\n"fieldClassName": "Date",\n"fieldClass": "java.util.Date"\n},\n{\n"name": "noticeReqLenght",\n"classType": 10,\n"fieldClassName": "Integer",\n"fieldClass": "java.lang.Integer"\n},\n{\n"name": "noticeReqUnit",\n"classType": 0,\n"fieldClassName": "String",\n"fieldClass": "java.lang.String"\n}\n]\n}')])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\n### Get records by corresponding AUL Type and description\n\n\n\n**HTTP Request** \n`GET http://[server]/jsf/rfws/core/auldata/getAulData` \n\n\n**Parameters**\n\n| Name    | Type              | Description                                                      |\n| ------- | ----------------- | ---------------------------------------------------------------- |\n| pattern   | `String`(*Query*) | **Required.** Lookup Type of AUL field                          |\n| aulDesc | `String`(*Query*) | **Required.** Description of AUL field |\n\n\n\n**Result (in JSON Array)**\n\n| Name   | Type     | Description                 |\n| ------ | -------- | --------------------------- |\n| id   | `Long`    | id  |\n| code | `string` | code of the record |\n| desc   | `string` | description of the record|\n\n> Sample request:\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nString url = "http://" + server + "/jsf/rfws/core/auldata/getAulData?pattern=aulTag&aulDesc=test0001"\n\nRequest request = new Request.Builder()\n  .url(url)\n  .get()\n  .addHeader("client_id", clientID)\n  .addHeader("authorization", "Bearer " + token)\n  .addHeader("cache-control", "no-cache")\n  .build();\n\nResponse response = client.newCall(request).execute();\n\n')])])]),t("blockquote",[t("p",[e._v('Sample response:\n{\n"values": [\n{\n"code": "test0001",\n"id": 163,\n"desc": "test0001"\n}\n],\n"message": ""\n}')])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\n### Create a new record by AUL Type and description\n\n\n\n**HTTP Request** \n`GET http://[server]/jsf/rfws/core/auldata/addAulData` \n\n\n**Parameters**\n\n| Name    | Type              | Description                                                      |\n| ------- | ----------------- | ---------------------------------------------------------------- |\n| pattern   | `String`(*Query*) | **Required.** Lookup Type of AUL field                          |\n| aulDesc | `String`(*Query*) | **Required.** Description of AUL field |\n\n\n\n**Result (in JSON Array)**\n\n| Name   | Type     | Description                 |\n| ------ | -------- | --------------------------- |\n| id   | `Long`    | id  |\n| message | `string` | Error Message |\n\n\n> Sample request:\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nString url = "http://" + server + "/jsf/rfws/core/auldata/addAulData?pattern=aulTag&aulDesc=test00012"\n\nRequest request = new Request.Builder()\n  .url(url)\n  .get()\n  .addHeader("client_id", clientID)\n  .addHeader("authorization", "Bearer " + token)\n  .addHeader("cache-control", "no-cache")\n  .build();\n\nResponse response = client.newCall(request).execute();\n\n')])])]),t("blockquote",[t("p",[e._v('Sample response:\n{\n"values": {\n"id": 164\n},\n"message": ""\n}')])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\n### Modify existing AUL record\n\n\n\n**HTTP Request** \n`GET http://[server]/jsf/rfws/core/auldata/updateAulData` \n\n**Parameters**\n\n| Name    | Type              | Description                                                      |\n| ------- | ----------------- | ---------------------------------------------------------------- |\n| id   | `long`(*Query*) | **Required.**ID of AUL Record                         |\n| aulDesc | `String`(*Query*) | **Required.** Description of AUL field |\n\n\n**Result (in JSON Array)**\n\n| Name   | Type     | Description                 |\n| ------ | -------- | --------------------------- |\n| message | `string` | Error Message |\n\n> Sample request:\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nString url = "http://" + server + "/jsf/rfws/core/auldata/addAulData?id=164&aulDesc=ddchange2"\n\nRequest request = new Request.Builder()\n  .url(url)\n  .get()\n  .addHeader("client_id", clientID)\n  .addHeader("authorization", "Bearer " + token)\n  .addHeader("cache-control", "no-cache")\n  .build();\n\nResponse response = client.newCall(request).execute();\n\n')])])]),t("blockquote",[t("p",[e._v('Sample response:\n{\n"message": ""\n}')])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);